// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package ssn_service_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SsnServiceApiServiceClient is the client API for SsnServiceApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SsnServiceApiServiceClient interface {
	// CreateServiceV1 - Create a service
	CreateServiceV1(ctx context.Context, in *CreateServiceV1Request, opts ...grpc.CallOption) (*CreateServiceV1Response, error)
	// DescribeServiceV1 - Describe a service
	DescribeServiceV1(ctx context.Context, in *DescribeServiceV1Request, opts ...grpc.CallOption) (*DescribeServiceV1Response, error)
	// ListServicesV1 - Services list
	ListServicesV1(ctx context.Context, in *ListServicesV1Request, opts ...grpc.CallOption) (*ListServicesV1Response, error)
	// RemoveServiceV1 - Remove a service
	RemoveServiceV1(ctx context.Context, in *RemoveServiceV1Request, opts ...grpc.CallOption) (*RemoveServiceV1Response, error)
}

type ssnServiceApiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSsnServiceApiServiceClient(cc grpc.ClientConnInterface) SsnServiceApiServiceClient {
	return &ssnServiceApiServiceClient{cc}
}

func (c *ssnServiceApiServiceClient) CreateServiceV1(ctx context.Context, in *CreateServiceV1Request, opts ...grpc.CallOption) (*CreateServiceV1Response, error) {
	out := new(CreateServiceV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.ssn_service_api.v1.SsnServiceApiService/CreateServiceV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ssnServiceApiServiceClient) DescribeServiceV1(ctx context.Context, in *DescribeServiceV1Request, opts ...grpc.CallOption) (*DescribeServiceV1Response, error) {
	out := new(DescribeServiceV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.ssn_service_api.v1.SsnServiceApiService/DescribeServiceV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ssnServiceApiServiceClient) ListServicesV1(ctx context.Context, in *ListServicesV1Request, opts ...grpc.CallOption) (*ListServicesV1Response, error) {
	out := new(ListServicesV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.ssn_service_api.v1.SsnServiceApiService/ListServicesV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ssnServiceApiServiceClient) RemoveServiceV1(ctx context.Context, in *RemoveServiceV1Request, opts ...grpc.CallOption) (*RemoveServiceV1Response, error) {
	out := new(RemoveServiceV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.ssn_service_api.v1.SsnServiceApiService/RemoveServiceV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SsnServiceApiServiceServer is the server API for SsnServiceApiService service.
// All implementations must embed UnimplementedSsnServiceApiServiceServer
// for forward compatibility
type SsnServiceApiServiceServer interface {
	// CreateServiceV1 - Create a service
	CreateServiceV1(context.Context, *CreateServiceV1Request) (*CreateServiceV1Response, error)
	// DescribeServiceV1 - Describe a service
	DescribeServiceV1(context.Context, *DescribeServiceV1Request) (*DescribeServiceV1Response, error)
	// ListServicesV1 - Services list
	ListServicesV1(context.Context, *ListServicesV1Request) (*ListServicesV1Response, error)
	// RemoveServiceV1 - Remove a service
	RemoveServiceV1(context.Context, *RemoveServiceV1Request) (*RemoveServiceV1Response, error)
	mustEmbedUnimplementedSsnServiceApiServiceServer()
}

// UnimplementedSsnServiceApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSsnServiceApiServiceServer struct {
}

func (UnimplementedSsnServiceApiServiceServer) CreateServiceV1(context.Context, *CreateServiceV1Request) (*CreateServiceV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceV1 not implemented")
}
func (UnimplementedSsnServiceApiServiceServer) DescribeServiceV1(context.Context, *DescribeServiceV1Request) (*DescribeServiceV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeServiceV1 not implemented")
}
func (UnimplementedSsnServiceApiServiceServer) ListServicesV1(context.Context, *ListServicesV1Request) (*ListServicesV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServicesV1 not implemented")
}
func (UnimplementedSsnServiceApiServiceServer) RemoveServiceV1(context.Context, *RemoveServiceV1Request) (*RemoveServiceV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveServiceV1 not implemented")
}
func (UnimplementedSsnServiceApiServiceServer) mustEmbedUnimplementedSsnServiceApiServiceServer() {}

// UnsafeSsnServiceApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SsnServiceApiServiceServer will
// result in compilation errors.
type UnsafeSsnServiceApiServiceServer interface {
	mustEmbedUnimplementedSsnServiceApiServiceServer()
}

func RegisterSsnServiceApiServiceServer(s grpc.ServiceRegistrar, srv SsnServiceApiServiceServer) {
	s.RegisterService(&SsnServiceApiService_ServiceDesc, srv)
}

func _SsnServiceApiService_CreateServiceV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SsnServiceApiServiceServer).CreateServiceV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.ssn_service_api.v1.SsnServiceApiService/CreateServiceV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SsnServiceApiServiceServer).CreateServiceV1(ctx, req.(*CreateServiceV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _SsnServiceApiService_DescribeServiceV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeServiceV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SsnServiceApiServiceServer).DescribeServiceV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.ssn_service_api.v1.SsnServiceApiService/DescribeServiceV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SsnServiceApiServiceServer).DescribeServiceV1(ctx, req.(*DescribeServiceV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _SsnServiceApiService_ListServicesV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SsnServiceApiServiceServer).ListServicesV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.ssn_service_api.v1.SsnServiceApiService/ListServicesV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SsnServiceApiServiceServer).ListServicesV1(ctx, req.(*ListServicesV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _SsnServiceApiService_RemoveServiceV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveServiceV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SsnServiceApiServiceServer).RemoveServiceV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.ssn_service_api.v1.SsnServiceApiService/RemoveServiceV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SsnServiceApiServiceServer).RemoveServiceV1(ctx, req.(*RemoveServiceV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

// SsnServiceApiService_ServiceDesc is the grpc.ServiceDesc for SsnServiceApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SsnServiceApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ozonmp.ssn_service_api.v1.SsnServiceApiService",
	HandlerType: (*SsnServiceApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateServiceV1",
			Handler:    _SsnServiceApiService_CreateServiceV1_Handler,
		},
		{
			MethodName: "DescribeServiceV1",
			Handler:    _SsnServiceApiService_DescribeServiceV1_Handler,
		},
		{
			MethodName: "ListServicesV1",
			Handler:    _SsnServiceApiService_ListServicesV1_Handler,
		},
		{
			MethodName: "RemoveServiceV1",
			Handler:    _SsnServiceApiService_RemoveServiceV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ozonmp/ssn_service_api/v1/ssn_service_api.proto",
}
