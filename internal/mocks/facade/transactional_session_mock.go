// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonmp/ssn-service-api/internal/facade/repo (interfaces: TransactionalSession)

// Package facademocks is a generated GoMock package.
package facademocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repo "github.com/ozonmp/ssn-service-api/internal/facade/repo"
)

// MockTransactionalSession is a mock of TransactionalSession interface.
type MockTransactionalSession struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionalSessionMockRecorder
}

// MockTransactionalSessionMockRecorder is the mock recorder for MockTransactionalSession.
type MockTransactionalSessionMockRecorder struct {
	mock *MockTransactionalSession
}

// NewMockTransactionalSession creates a new mock instance.
func NewMockTransactionalSession(ctrl *gomock.Controller) *MockTransactionalSession {
	mock := &MockTransactionalSession{ctrl: ctrl}
	mock.recorder = &MockTransactionalSessionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionalSession) EXPECT() *MockTransactionalSessionMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockTransactionalSession) Execute(arg0 context.Context, arg1 func(context.Context, repo.QueryerExecer) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockTransactionalSessionMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockTransactionalSession)(nil).Execute), arg0, arg1)
}
